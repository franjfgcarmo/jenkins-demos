library(
    identifier: 'jenkins-demos-library@main',
    retriever: modernSCM([
        $class: 'GitSCMSource',
        remote: 'https://github.com/franjfgcarmo/jenkins-demos-library.git',
        credentialsId:'github-credentials'
    ])
)

pipeline {
    agent any

    parameters {
        booleanParam(name: 'RC', defaultValue: false, description: 'Is this a Release Candidate?')
    }
    environment {
        //Directiva de script
        VERSION = sh(
            script: 'cd ./05-pipelines/solution && npx -c \'echo $npm_package_version\'',
            returnStdout: true
        ).trim()
        VERSION_RC = 'rc.2'
    }

    stages {
        stage('Audit tools') {
            steps {
              auditTools()
              showMessage(message:'This is a function with a Parameter')
            }
        }

        stage('Build') {
            environment {
                VERSION_SUFFIX = getVersionSuffix(
                    isReleaseCandidate: params.RC,
                    rcNumber: env.BUILD_NUMBER
                )
             }
            steps {
                dir('./05-pipelines/solution') {
                    echo "Building version ${VERSION} with suffix: ${VERSION_SUFFIX}"
                    sh '''
                        npm install
                        npm run build
                    '''
                }
            }
        }

        stage('Unit test') {
            steps {
                dir('./05-pipelines/solution') {
                    sh 'npm test'
                }  
            }             
        }

        stage('Publish') {
            when {
                expression { return params.RC }
            }
            steps {
              archiveArtifacts('05-pipelines/solution/app/')
            }             
        }
    }
}